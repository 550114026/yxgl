package com.ikkong.vote.controller;

import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.system.controller.base.UrlPermissController;
import com.ikkong.vote.model.Complaint;
import com.ikkong.vote.service.ComplaintService;
import com.ikkong.vote.service.impl.ComplaintServiceImpl;

/**
 * Generated by Blade.
 * 2019-01-20 18:59:30
 */
public class ComplaintController extends UrlPermissController {
	private static String CODE = "complaint";
	private static String PERFIX = "t_complaint";
	private static String LIST_SOURCE = "Complaint.list";
	private static String BASE_PATH = "/complaint/";
	
	ComplaintService service = new ComplaintServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "complaint.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "complaint_add.html");
	}

	public void edit() {
		String id = getPara(0);
		Complaint complaint = service.findById(id);
		setAttr("model", JsonKit.toJson(complaint));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "complaint_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Complaint complaint = service.findById(id);
		setAttr("model", JsonKit.toJson(complaint));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "complaint_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		Complaint complaint = mapping(PERFIX, Complaint.class);
		boolean temp = service.save(complaint);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Complaint complaint = mapping(PERFIX, Complaint.class);
		boolean temp = service.update(complaint);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
