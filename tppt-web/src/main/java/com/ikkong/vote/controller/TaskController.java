package com.ikkong.vote.controller;


import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.core.toolbox.Record;
import com.ikkong.system.controller.base.UrlPermissController;
import com.ikkong.vote.model.Task;
import com.ikkong.vote.service.TaskService;
import com.ikkong.vote.service.impl.TaskServiceImpl;
import org.apache.commons.lang3.StringUtils;

import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 * Generated by Blade.
 * 2018-10-15 14:43:20
 */
public class TaskController extends UrlPermissController {
    private static String CODE = "task";
    private static String PERFIX = "t_task";
    private static String LIST_SOURCE = "Task.list";
    private static String BASE_PATH = "/task/";

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

    TaskService service = new TaskServiceImpl();

    public void index() {
        setAttr("code", CODE);
        render(BASE_PATH + "task.html");
    }

    public void add() {
        setAttr("code", CODE);
        setAttr("PERFIX", PERFIX);
        String eids = getPara("eids");
        String mids = getPara("mids");
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(new Date());
        setAttr("startTime", calendar.getTime());
        calendar.add(Calendar.DATE, 1);
        setAttr("endTime", calendar.getTime());

        setAttr("t", 0);
        if (StringUtils.isNotEmpty(eids)) {
            setAttr("t", 1);
            setAttr("eids", eids);
        } else if (StringUtils.isNotEmpty(mids)) {
            setAttr("mids", mids);
            setAttr("t", 2);
        }
        render(BASE_PATH + "task_add.html");
    }


    public void list() {
        Record record = Record.create();
        if(!isAdmin()) {
            record.set("deptid", getDeptId());
        }
        String keystr = getPara("keystr", "");
        if (StringUtils.isNotEmpty(keystr)) {
            try {
                keystr = java.net.URLDecoder.decode(keystr, "UTF-8");
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
        }
        String startDate = getPara("startDate");
        String endDate = getPara("endDate");
        record.set("keystr", keystr.trim());
        record.set("startDate", startDate);
        record.set("endDate", endDate);
        Object grid = paginate(LIST_SOURCE, record);
        renderJson(grid);
    }

    public void save() {
        Task task = mapping(PERFIX, Task.class);
        task.setVersion(1);
        task.setCreatetime(new Date());
        task.setCreatruserid(getUserId());
        task.setStarttime(new Date());
        task.setStatus(1);
        String eids = getPara("eids");
        if (StringUtils.isBlank(eids)) {
            renderJson(error("活动参数错误"));
            return;
        }
        //
        Record record=Record.create();
        record.set("eids",eids);
        service.deleteTask(record);
        try {
            String[] eidArray = eids.split(",");
            for (String eid : eidArray) {
                //先删除旧的任务

                //新增任务
                task.setEvent_id(Integer.parseInt(eid));
                service.save(task);
            }
        }catch (Exception e){
            renderJson(error("任务创建失败！"));
            return ;
        }
        renderJson(success(SAVE_SUCCESS_MSG));
    }


    public void remove() {
        String ids = getPara("ids");
        int cnt = service.deleteByIds(ids);
        if (cnt > 0) {
            renderJson(success(DEL_SUCCESS_MSG));
        } else {
            renderJson(error(DEL_FAIL_MSG));
        }
    }
}
