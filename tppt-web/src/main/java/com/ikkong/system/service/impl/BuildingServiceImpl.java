package com.ikkong.system.service.impl;

import java.util.List;

import com.ikkong.core.base.service.impl.BaseService;
import com.ikkong.core.dao.Db;
import com.ikkong.core.toolbox.Record;
import com.ikkong.system.model.Building;
import com.ikkong.system.service.BuildingService;

/**
 * Generated by Blade.
 * 2017-11-07 17:36:57
 */
public class BuildingServiceImpl extends BaseService<Building> implements BuildingService{

	@Override
	public List<Record> queryBuildingList(Record record) {
		StringBuilder sql=new StringBuilder();
		sql.append(" select b.id,b.buildname,b.longitude,b.latitude,b.maparea");
		sql.append(" from glpt_building b ");
		sql.append(" join tfw_dept d on b.areaid=d.ID");
		sql.append(" where b.maparea>'' ");
		 if(record.containsKey("areaid")){
		 sql.append(" and d.ID=#{areaid} ");
		 }
		if(record.containsKey("buildname")){
			sql.append(" and  b.buildname like concat('%',#{buildname},'%')");
		}
		if(record.containsKey("holderName")){
			sql.append(" and  b.id in(");
			sql.append(" 			select buildingid from glpt_building_owner bo  ");
			sql.append(" 			where bo.name like concat('%',#{holderName},'%') ");
			sql.append(" 			or bo.idno like concat('%',#{holderName},'%') ");
			sql.append(" 			or bo.phone like concat('%',#{holderName},'%') ");
			sql.append(" 			)");
		}
		return Db.init().selectList(sql.toString(), record);
	}
	
	
	/**
	 * 按第查询楼宇
	 * @param ids
	 * @return
	 */
	public List<Record> queryBuildingByIds(String ids){
		StringBuilder sql=new StringBuilder();
		sql.append(" select * ");
		sql.append(" from glpt_building  ");
		sql.append(" where id in("+ids+")");

		return Db.init().selectList(sql.toString(), new Object[]{});
	}
	
	
	public int  mergeBuildingByIds(String ids, String id,String newName){
		StringBuilder sql=new StringBuilder();
		sql.append(" delete from glpt_building where id in("+ids+") and id!="+id+";");
		sql.append(" update glpt_enterprise set buildingid="+id+" where buildingid in("+ids+");");
		sql.append(" update glpt_building set buildname=#{newName} where id="+id+";");
		return Db.init().update(sql.toString(), new Object[]{newName});
	}

}
